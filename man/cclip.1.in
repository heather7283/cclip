.TH cclip 1 "2025-04-20" "@VERSION@" "User Commands"
.SH NAME
cclip \- command line interface for cclip database.

.SH SYNOPSIS
.B cclip
.RI [ OPTIONS... ]
.I ACTION
.I ACTION_ARGS
.SH DESCRIPTION
Interact with a
.BR cclipd (1)
database.

.SH OPTIONS
.TP 4
.BI \-d " DB_PATH"
Path to database file. Database will NOT be created if it doesn't exist.
.br
Default is $XDG_DATA_HOME/cclip/db.sqlite3,
where XDG_DATA_HOME defaults to $HOME/.local/share if it is unset.
.TP 4
.B \-h
Print help message and exit 0.
.TP 4
.B \-V
Print version and exit 0.

.SH ACTIONS
You must specify exactly one of the following actions:

.PP
\fBlist\fP [-t] [-T \fITAG\fP] [\fIFIELDS\fP]
.RS 4
Prints information about all database entries to stdout.
Fields are separated with tabs, entries are separated with newlines.

.PP
If -t is specified, only print those entries that have at least one tag.
.br
If -T is specified, only print those entries that have a matching \fITAG\fP.

.PP
Output format can be controlled by specifying a list of comma-separated fields as \fIFIELDS\fP.
Available fields are (also applies to \fBget\fP, see below):
.PD 0
.IP \(bu 4
id (alias: rowid)
.IP \(bu 4
preview
.IP \(bu 4
mime_type (aliases: mime, type)
.IP \(bu 4
data_size (alias: size)
.IP \(bu 4
timestamp (alias: time)
.IP \(bu 4
tags (alias: tag)
.PD

.PP
If \fIFIELDS\fP argument is not specified, it defaults to \fIid,mime_type,preview\fP.
.RE

.PP
\fBget\fP \fIID\fP [\fIFIELDS\fP]
.RS 4
Print saved clipboard entry with specified \fIID\fP to stdout.
If \fIID\fP is -, read it from stdin (this applies to all actions accepting an ID).
If \fIFIELDS\fP is specified, it is treated the same way as in \fBlist\fP.
.RE

.PP
\fBdelete\fP [-s] \fIID\fP
.RS 4
Delete entry with specified \fIID\fP from database.
.PP
If -s is specified, overwrites deleted entry with zeroes for security
(this uses the secure_delete pragma provided by sqlite under the hood).
.RE

.PP
\fBtag\fP \fIID\fP \fITAG\fP
.br
\fBtag\fP -d \fIID\fP \fI[TAG]\fP
.RS 4
In the first form, add a tag specified as \fITAG\fP to entry with specified \fIID\fP.
In the second form, remove \fITAG\fP from entry with specified \fIID\fP
if \fITAG\fP is specified, otherwise remove ALL tags from an entry.
.RE

.PP
\fBtags\fP
.RS 4
Lists all tags present in the database to stdout, separated by newlines.
.RE

.PP
\fBwipe\fP [-ts]
.RS 4
Remove all entries from the database. This preserves tagged entries by default.
.PP
If -t is specified, tagged entries are not preserved.
.br
If -s is specified, it is treated in the same way as in \fBdelete\fP.
.RE

.PP
\fBvacuum\fP
.RS 4
Rebuilds the database file, repacking it into a minimal amount of space.
.RE

.SH EXAMPLES
Get most recently saved PNG image and display it with
.BR chafa (1)
.PP
.RS 4
.EX
.\" SRC BEGIN (cclip_png_chafa.sh)
cclip list id,mime | awk '$2 == "image/png" {print $1; exit}' | cclip get - | chafa
.\" SRC END
.EE
.RE
.PP
Interactive picker using
.BR fzf (1)
.PP
.RS 4
.EX
.\" SRC BEGIN (cclip_fzf_picker.sh)
#!/bin/sh

set -- $(cclip list | fzf --with-nth 3..)
id="$1"
mime="$2"
[ -n "$id" ] && cclip get "$id" | wl-copy --type "$mime"
.\" SRC END
.EE
.RE
.PP
Example above can be simplifed if you let
.BR wl-copy (1)
figure out MIME type
.PP
.RS 4
.EX
.\" SRC BEGIN (cclip_fzf_picker_simple.sh)
cclip list | fzf --with-nth 3.. --accept-nth 1 | cclip get - | wl-copy
.\" SRC END
.EE
.RE

.SH BUGS
Please report bugs to https://github.com/heather7283/cclip/issues.
.PP
When reporting bugs:
.PP
.PD 0
.IP \(bu 4
Provide backtrace with symbols if you experience a crash.
.IP \(bu 4
Describe steps necessary to reproduce the issue.
.PD

.SH SEE ALSO
.BR cclipd (1),
.BR wl-clipboard (1),
.BR fzf (1),
.BR rofi (1)
